install.packages("KernSmooth")
library(kernSmooth)
library(KernSmooth)
exit
quit
add2 <- function(x, y) {
x + y
}
add2(2, 3)
above <- function(x, n) {
use <- x>n
x[use]
}
x <- 1:20
above(x, 12)
above <- function(x, n =10) {
use <- x>n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in i:nc) {
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], no.na = removeNA)
}
means
}
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i], na.rm = removeNA)
}
means
}
columnmean(airquality)
?mean
install.packages(c("jsonlite", "manipulate", "RCurl", "stringr"))
install.packages("xlsx")
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
library(xlsx)
Sys.getenv()
names(Sys.getenv())
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7')
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7')
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jdk1.7.0_40')
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_45')
library(rJava)
library(xlsx)
install.packages("manipulate")
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key = "56b637a5baffac62cad9",
secret = "8e107541ae1791259e9987d544ca568633da2ebf")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "2dea733cc50ac386f3ae",
secret = "9a39aaf19bcf6833534659cd8b1fedb54c5cc51f")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
myapp <- oauth_app("github",
key = "2dea733cc50ac386f3ae",
secret = "b056f4c3c12b6475b38f43df7de9ec60a8dcb591")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github",
key = "2dea733cc50ac386f3ae",
secret = "b056f4c3c12b6475b38f43df7de9ec60a8dcb591")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "2dea733cc50ac386f3ae",
secret = "b056f4c3c12b6475b38f43df7de9ec60a8dcb591")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
gtoken
setwd("C:\Users\2033\Documents\LearnR\Getting and Cleaning Data\GettingCleaningData_Assessment")
setwd("C:/Users/2033/Documents/LearnR/Getting and Cleaning Data/GettingCleaningData_Assessment")
dtTest <- read.table("X_test.txt")
head(dtTest)
y <- read.table("y_test.txt")
head(y)
dtTrain <- read.table("X_train.txt")
View(y)
head(dtTrain)
y <- read.table("y_train.txt")
y
head(y)
nrow(y)
nrow(dtTrain)
ncol(dtTrain)
dir()
dtTest <- read.table("UCI HAR Dataset/test/X_test.txt")
colnames <- read.table("UCI HAR Dataset/features.txt")
head(colnames)
tail(colnames)
names(colnames)
names(colnames) <- c("no.", "name")
tail(colnames)
head(colnames)
head(colnames, n=10)
head(colnames, n=20)
head(dtTest)
class(dtTest)
class(dtTest$V1)
class(dtTest$V5)
dtTest[1,]
dtTrain[1,]
ncol(dtTrain)
ncol(dtTest)
cbind(dtTest[1,], dtTrain[1,])
rbind(dtTest[1,], dtTrain[1,])
head(colnames, n=10)
y <- read.table("UCI HAR Dataset/test/subject_test.txt")
head(y)
y <- read.table("UCI HAR Dataset/test/y_test.txt)
y <- read.table("UCI HAR Dataset/test/y_test.txt")
head(y)
str(y)
summary(y)
y <- read.table("UCI HAR Dataset/test/subject_test.txt")
summary(y)
nrow(y)
TestActivity <- read.table("UCI HAR Dataset/test/y_test.txt")
nrow(TestActivity)
dtTest <- read.table("UCI HAR Dataset/test/X_test.txt")
TestSubject <- read.table("UCI HAR Dataset/test/subject_test.txt")
nrow(dtTest)
nrow(TestSubject)
colnames <- read.table("UCI HAR Dataset/features.txt")
colnames$V@
colnames$V2
colnames <- read.table("UCI HAR Dataset/features.txt", colClasses = "character")
colnames$V2
colnames$V2 %in% "mean"
colnames$V2 %in% c("mean()", "std()")
TestActivity <- read.table("UCI HAR Dataset/test/y_test.txt", names =c("ID", "Activity"))
TestActivity <- read.table("UCI HAR Dataset/test/y_test.txt")
names(TestActivity) <- c("ID", "Activity")
head(TestActivity)
names(TestActivity)
activity_labels <- read.table("activity_labels.txt")
activity_labels <- read.table("CI HAR Dataset/activity_labels.txt")
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
head(activity_labels)
?find
?charmatch
charmatch("ING", activity_labels$V2)
charmatch("LAYING", activity_labels$V2)
pmatch("LAYING", activity_labels$V2)
pmatch("ING", activity_labels$V2)
pmatch("LAY", activity_labels$V2)
pmatch("S", activity_labels$V2)
pmatch("WA", activity_labels$V2)
pmatch("WALKING", activity_labels$V2)
pmatch("WALKING_U", activity_labels$V2)
pmatch("SI", activity_labels$V2)
charmatch("SI", activity_labels$V2)
charmatch("S", activity_labels$V2)
match.arg("S", activity_labels$V2)
pmatch(c("WALK", "ING"), activity_labels$V2)
pmatch(c("SI", "ING"), activity_labels$V2)
pmatch(c("SI", "ING"), activity_labels$V2, dup=T)
pmatch(c("SI", "ING"), activity_labels$V2, dup=F)
pmatch(c("S", "SI", "ING"), activity_labels$V2, dup=F)
pmatch(c("", "SI", "ING"), activity_labels$V2, dup=F)
pmatch(c("", "SI", "ING"), activity_labels$V2, dup=T)
grep(c("", "SI", "ING"), activity_labels$V2)
grep("SI", activity_labels$V2)
grep("S", activity_labels$V2)
grep("ING", activity_labels$V2)
grep("WALK", activity_labels$V2)
grep("mean()", colnames$V2)
grep("std()", colnames$V2)
colnames[,grep("mean()", features$V2)]
colnames[,grep("mean()", colnames$V2)]
colnames[grep("mean()", colnames$V2),]
colnames[grep("std()", colnames$V2),]
sum(is.na(dtTest))
sum(is.na(dtTrain))
names(dtTest)
names(dtTest) <- colnames$V2
names(dtTest)
